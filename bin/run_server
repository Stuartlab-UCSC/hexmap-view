#!/bin/bash

SERVER_TYPE=$1 # Type of server to start, one of: / db / http / https / www /
INSTALL=$2     # The ID of the server: prod / dev / ....
BIN=$3         # Location of the bin directory for this server
TARGET=$4      # tar target, one of / www / hub / tests / docs / bin /

if [ -z ${SERVER_TYPE} ]; then
    echo Supply one of: db, http, https, www
    echo Exiting
    exit
else
    echo Starting $SERVER_TYPE
fi

if [ -z ${INSTALL} ]; then
    echo You need to set the value of INSTALL in the run script.
    echo Exiting
    exit
else
    echo Using install: $INSTALL
fi

if [ -z ${BIN} ]; then
    echo You need to set the value of BIN in the run script.
    echo Exiting
    exit
else
    echo Using bin: $BIN
fi

# Handle any tar actions first
if [ $SERVER_TYPE == 'maketar' ] || [ $SERVER_TYPE == 'xtar' ]
    then
    if [ $SERVER_TYPE == 'xtar' ] && [ $INSTALL == 'swat' ]
        then
        echo Sorry you cannot xtar to here and remove all of your current code!
        exit
    fi
    ACTION=$SERVER_TYPE
    $BIN/tarAction $ACTION $TARGET
    exit
fi

# Run some development servers in the foreground
if [ $INSTALL == swat ]
    then
    FOREGROUND=yes
fi

# Configure the server
source $BIN/../config/config.$INSTALL

if [ $SERVER_TYPE == 'wwwViz' ]; then
    VIZ=" --production --extra-packages bundle-visualizer"
    SERVER_TYPE=www
else
    VIZ=
fi

# Run the server by type using one of the above configs

if [ $SERVER_TYPE == 'http' ]; then
    touch $HEXMAP/http.log
    mv $HEXMAP/http.log $HEXMAP/http.prev.log
    (nohup $METEOR_BASE/bin/node $HEXMAP/http/http.js &> $HEXMAP/http.log &)

elif [ $SERVER_TYPE == 'https' ] ; then
    touch $HEXMAP/https.log
    mv $HEXMAP/https.log $HEXMAP/https.prev.log
    (nohup $METEOR_BASE/bin/node $HEXMAP/https/https.js &> $HEXMAP/https.log &)

elif [ $SERVER_TYPE == 'db' ]; then
    touch $HEXMAP/db.log
    mv $HEXMAP/db.log $HEXMAP/db.prev.log
    (nohup $METEOR_BASE/mongodb/bin/mongod \
            --bind_ip 127.0.0.1 \
            --port $DB_PORT \
            --dbpath $HEXMAP/db \
            &> $HEXMAP/db.log &)

elif [ $SERVER_TYPE == 'dbRepair' ]; then
    touch $HEXMAP/db.log
    mv $HEXMAP/db.log $HEXMAP/db.prev.log
    (nohup $METEOR_BASE/mongodb/bin/mongod \
            --bind_ip 127.0.0.1 \
            --port $DB_PORT \
            --dbpath $HEXMAP/db \
            --repair \
            &> $HEXMAP/db.log &)

elif [ $SERVER_TYPE == 'built' ]; then
    export MONGO_URL=mongodb://localhost:$DB_PORT/$DB_NAME
    #cd $HEXMAP/www
    touch $HEXMAP/www.log
    mv $HEXMAP/www.log $HEXMAP/www.prev.log
    cat $BIN/../config/settingsA.$INSTALL.json $BIN/../config/settingsB.json > $BIN/../config/settings.json
    export MAIL_URL="smtp://localhost"
    export METEOR_SETTINGS=$(cat $BIN/../config/settings.json)
    (nohup node $HEXMAP/www/bundle/main.js &> $HEXMAP/www.log &)

elif [ $SERVER_TYPE == 'www' ]; then
    export MONGO_URL=mongodb://localhost:$DB_PORT/$DB_NAME
    cd $HEXMAP/www
    touch $HEXMAP/www.log
    mv $HEXMAP/www.log $HEXMAP/www.prev.log
    cat $BIN/../config/settingsA.$INSTALL.json $BIN/../config/settingsB.json > $BIN/../config/settings.json
    if [ -z ${FOREGROUND} ]; then
        export MAIL_URL="smtp://localhost"
        (nohup $METEOR/meteor $VIZ --port $PORT --settings $BIN/../config/settings.json &> $HEXMAP/www.log &)
    else
        $METEOR/meteor $VIZ --port $PORT --settings $HEXMAP/config/settings.json
    fi

else
    echo Invalid SERVER_TYPE: $SERVER_TYPE
    echo Exiting
    exit
fi
