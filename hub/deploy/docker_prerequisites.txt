
Prerequisites for windows install:
(https://docs.docker.com/docker-for-windows/install/#/what-to-know-before-you-install)

- README FIRST for Docker Toolbox and Docker Machine users: Docker for Windows
    requires Microsoft Hyper-V to run. After Hyper-V is enabled, VirtualBox will
    no longer work, but any VirtualBox VM images will remain. VirtualBox VMs
    created with docker-machine (including the default one typically created
    during Toolbox install) will no longer start. These VMs cannot be used
    side-by-side with Docker for Windows. However, you can still use
    docker-machine to manage remote VMs.

- The current version of Docker for Windows runs on 64bit Windows 10 Pro,
    Enterprise and Education (1511 November update, Build 10586 or later). In
    the future we will support more versions of Windows 10.

- Containers and images created with Docker for Windows are shared between all
    user accounts on machines where it is installed. This is because all Windows
    accounts will use the same VM to build and run containers. In the future,
    Docker for Windows will better isolate user content.

- The Hyper-V package must be enabled for Docker for Windows to work. The Docker
    for Windows installer will enable it for you, if needed. (This requires a
    reboot). If your system does not satisfy these requirements, you can install
    Docker Toolbox, which uses Oracle Virtual Box instead of Hyper-V.

- Virtualization must be enabled. Typically, virtualization is enabled by
    default. (Note that this is different from having Hyper-V enabled.) For more
    detail see Virtualization must be enabled in Troubleshooting.

- Nested virtualization scenarios, such as running Docker for Windows on a
    VMWare or Parallels instance, might work, but come with no guarantees (i.e.,
    not officially supported). For more information, see Running Docker for
    Windows in nested virtualization scenarios

- What the Docker for Windows install includes: The installation provides Docker
    Engine, Docker CLI client, Docker Compose, and Docker Machine.
